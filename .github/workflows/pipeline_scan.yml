name: Pipelinescanner Verademo Maven Build

on: pull_request


jobs:
  build:
    runs-on: ubuntu-latest
    # grants permissions for the artifact to be uploaded
    permissions:
      contents: read
      packages: write
    
    
    steps:
    
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can acces it and clones the repo
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Build with Maven
        run: |
          cd app/
          mvn -B clean package --file pom.xml
          ls target/
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
            # Artifact name
            name: verademo-artifact
            # optional, default is artifact
            # A file, directory or wildcard pattern that describes what to upload
            path: app/target/verademo.war
            # The desired behavior if no files are found using the provided path.
            if-no-files-found: error
      
  veracode_piplein_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2.0.10
        with:
          name: verademo-artifact
          path: analysis/
      - run: pwd
      - run: ls -la analysis/
      
      - name: Veracode Pipeline-Scan
  # You may pin to the exact commit or the version.
  # uses: veracode/Veracode-pipeline-scan-action@49e420ffbd3aa48823bbf3221fbfa7d61127631a
        uses: veracode/Veracode-pipeline-scan-action@v1.0.3
        with:
          # vid
          vid: ${{secrets.VERACODE_API_ID}}
          # vkey
          vkey: ${{secrets.VERACODE_API_KEY}
          # Filename of the packaged application to upload and scan.
          file: analysis/verademo.war
          # Fail the pipeline job if the scan finds flaws of the specified severities. Enter a comma-separated list of severities in quotation marks.
          fail_on_severity: Very High
          # Filter the flaws that exist in the specified baseline file and show only the additional flaws in the current scan.
          baseline_file: true
          # Enter true to save the scan results in JSON format. Default is true.
          json_output: results.json
          # Enable Storage of baseline file
          store_baseline_file: true
          # Enter the branch name where the baseline file should be stored
          store_baseline_file_branch: feature
          # From which results should the baseline file be created. standard = full results || filtered = filtered results
          create_baseline_from: standard
          # Fail the build upon findings. Takes true or false
          fail_build: true

